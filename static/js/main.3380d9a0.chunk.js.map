{"version":3,"sources":["components/Button.jsx","main/Calculator.jsx","components/Display.jsx","reportWebVitals.js","index.js"],"names":["props","classes","operation","double","triple","className","onClick","e","click","label","initialState","displayValue","clearDisplay","values","current","Calculator","state","clearMemory","bind","addDigit","setOperation","this","setState","equals","currentOp","eval","n","includes","i","newValue","parseFloat","value","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3380d9a0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Button.css'\r\n\r\nexport default props =>{\r\n    let classes = 'button '\r\n    classes += props.operation ? 'operation' : ''\r\n    classes += props.double ? 'double' : ''\r\n    classes += props.triple ? 'triple' : ''\r\n\r\n    return(\r\n        <button className={classes} onClick={e=>props.click && props.click(props.label)}>\r\n            {props.label}\r\n        </button>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Calculator.css'\r\nimport Button from '../components/Button'\r\nimport Display from '../components/Display'\r\n\r\n\r\nconst initialState = {\r\n    displayValue: '0',\r\n    clearDisplay: false,\r\n    operation: null,\r\n    values:[0, 0],\r\n    current: 0\r\n}\r\n\r\nexport default class Calculator extends Component {\r\n\r\n    state = {...initialState}\r\n\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n            this.clearMemory = this.clearMemory.bind(this)\r\n            this.addDigit = this.addDigit.bind(this)\r\n            this.setOperation = this.setOperation.bind(this)\r\n      }\r\n\r\n\r\n    clearMemory(){\r\n        this.setState({...initialState})\r\n    }\r\n\r\n    setOperation(operation){\r\n        if(this.state.current === 0){\r\n            this.setState({operation, current: 1, clearDisplay: true})\r\n        } else {\r\n            const equals = operation === '='\r\n            const currentOp = this.state.operation\r\n\r\n            const values = [...this.state.values]\r\n            values[0] = eval(`${values[0]} ${currentOp} ${values[1]}`)\r\n            values[1] = 0\r\n\r\n            this.setState({\r\n                displayValue: values[0],\r\n                operation: equals ? null : operation,\r\n                current: equals ? 0 : 1,\r\n                clearDisplay: !equals,\r\n                values\r\n            })\r\n        }\r\n    }\r\n\r\n    addDigit(n){\r\n        if(n === '.' && this.state.displayValue.includes('.')){\r\n            return\r\n        }\r\n        const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay\r\n        const currentValue = clearDisplay ? '' : this.state.displayValue\r\n        const displayValue = currentValue + n\r\n        this.setState({displayValue, clearDisplay: false})\r\n\r\n        if(n !== '.'){\r\n            const i = this.state.current\r\n            const newValue = parseFloat(displayValue)\r\n            const values = [...this.state.values]\r\n            values[i] = newValue\r\n            this.setState({values})\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n         return(\r\n            <div className=\"calculator\">\r\n                <Display value={this.state.displayValue}/>\r\n                <Button label='AC'click={this.clearMemory} triple />\r\n                <Button label='/'click={this.setOperation} operation/>\r\n                <Button label='7'click={this.addDigit}/>\r\n                <Button label='8'click={this.addDigit}/>\r\n                <Button label='9'click={this.addDigit}/>\r\n                <Button label='*'click={this.setOperation} operation/>\r\n                <Button label='4'click={this.addDigit}/>\r\n                <Button label='5'click={this.addDigit}/>\r\n                <Button label='6'click={this.addDigit}/>\r\n                <Button label='-'click={this.setOperation} operation/>\r\n                <Button label='1'click={this.addDigit}/>\r\n                <Button label='2'click={this.addDigit}/>\r\n                <Button label='3'click={this.addDigit}/>\r\n                <Button label='+'click={this.setOperation} operation/>\r\n                <Button label='0'click={this.addDigit} double/>\r\n                <Button label='.'click={this.addDigit}/>\r\n                <Button label='='click={this.setOperation} operation/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './Display.css'\r\n\r\nexport default props =>\r\n    <div className=\"display\">{props.value}</div>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './main/Calculator';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n      <div>\n      <h1>Calculadora</h1>\n      <Calculator/>\n      </div>\n  \n  \n        ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}